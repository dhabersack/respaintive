// Generated by CoffeeScript 1.6.2
(function() {
  var canvas, color, colors, context, draw, endDrawing, eraser, initializeColor, initializeColors, initializeContext, initializeTool, initializeTools, isDrawing, selectColor, selectEraser, selectTool, setElementColor, startDrawing, tools;

  canvas = document.querySelector('canvas');

  context = canvas.getContext('2d');

  isDrawing = false;

  color = null;

  colors = document.querySelectorAll('#colors > li');

  tools = document.querySelectorAll('#tools > li');

  eraser = document.getElementById('eraser');

  startDrawing = function(event) {
    isDrawing = true;
    context.beginPath();
    return context.moveTo(event.offsetX, event.offsetY);
  };

  endDrawing = function(event) {
    context.closePath();
    return isDrawing = false;
  };

  draw = function(event) {
    if (isDrawing) {
      context.lineTo(event.offsetX, event.offsetY);
      return context.stroke();
    }
  };

  initializeColor = function(color) {
    color.addEventListener('click', selectColor);
    return setElementColor(color);
  };

  selectColor = function(event) {
    var _i, _len;

    context.strokeStyle = event.target.dataset['color'];
    for (_i = 0, _len = colors.length; _i < _len; _i++) {
      color = colors[_i];
      color.className = '';
    }
    return event.target.className = 'active';
  };

  setElementColor = function(element) {
    return element.style.background = element.dataset['color'];
  };

  initializeTool = function(tool) {
    return tool.addEventListener('click', selectTool);
  };

  selectTool = function(event) {
    var tool, _i, _len;

    context.lineWidth = event.target.dataset['weight'];
    for (_i = 0, _len = tools.length; _i < _len; _i++) {
      tool = tools[_i];
      tool.className = '';
    }
    return event.target.className = 'active';
  };

  selectEraser = function(event) {
    return context.strokeStyle = '#fff';
  };

  eraser.addEventListener('click', selectEraser, false);

  initializeContext = function() {
    context.strokeStyle = '#3e3e3e';
    context.lineCap = 'round';
    return context.lineJoin = 'round';
  };

  initializeColors = function() {
    var _i, _len, _results;

    _results = [];
    for (_i = 0, _len = colors.length; _i < _len; _i++) {
      color = colors[_i];
      _results.push(initializeColor(color));
    }
    return _results;
  };

  initializeTools = function() {
    var tool, _i, _len, _results;

    _results = [];
    for (_i = 0, _len = tools.length; _i < _len; _i++) {
      tool = tools[_i];
      _results.push(initializeTool(tool));
    }
    return _results;
  };

  initializeContext();

  initializeColors();

  initializeTools();

  canvas.addEventListener('mousedown', startDrawing, false);

  canvas.addEventListener('mousemove', draw, false);

  canvas.addEventListener('mouseup', endDrawing, false);

}).call(this);
